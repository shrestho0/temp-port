---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

import Layout from "@/layouts/Layout.astro";
import SocialLinks from "@/components/SocialLinks.astro";
import Link from "@/components/shared/Link.astro";
import convertAsteriskToStrongTag from "@/utils/convertAsteriskToStrongTag";

import presentation from "@/data/presentation";
import experiences from "@/data/experience";
import ExperienceCard from "@/components/ExperienceCard.astro";
import ProjectCard from "@/components/ProjectCard.astro";
import skills from "@/data/skills";
import SkillCard from "@/components/SkillCard.astro";

// const projects = (await getCollection("projects")).sort(function (
//   first,
//   second
// ) {
//   return second.data.publishedAt.getTime() - first.data.publishedAt.getTime();
// });
const projects = await getCollection("projects");
---

<Layout>
  <main class="flex flex-col gap-20">
    <article
      class="flex flex-col gap-8 md:flex-row-reverse md:justify-end md:gap-12"
    >
      {
        presentation.profile && (
          <Image
            src={presentation.profile}
            class="w-1/4 self-center rounded-full"
            alt="Your Profile"
            width="200"
            height="200"
          />
        )
      }

      <div class="flex flex-col gap-8">
        <h1 class="text-3xl text-neutral-100">
          {presentation.title}
        </h1>

        <h2
          class="w-auto max-w-[60ch] leading-6"
          set:html={convertAsteriskToStrongTag(presentation.description)}
        />

        <SocialLinks />
      </div>
    </article>

    <article class="flex flex-col gap-6">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">Technologies I use</h3>
      </header>

      <p class="text-lg">Languages:</p>

      <section class="flex flex-row flex-wrap gap-4">
        {
          skills.languages.map((d) => (
            <SkillCard name={d.name} exp_level={d.exp_level} />
          ))
        }
      </section>

      <p class="text-lg">Frameworks:</p>
      <section class="flex flex-row flex-wrap gap-4">
        {
          skills.frameworks.map((d) => (
            <SkillCard name={d.name} exp_level={d.exp_level} />
          ))
        }
      </section>

      <p class="text-lg">Databases:</p>
      <section class="flex flex-row flex-wrap gap-4">
        {
          skills.databases.map((d) => (
            <SkillCard name={d.name} exp_level={d.exp_level} />
          ))
        }
      </section>
      <p class="text-lg">Other tools:</p>
      <section class="flex flex-row flex-wrap gap-4">
        {
          skills.tools.map((d) => (
            <SkillCard name={d.name} exp_level={d.exp_level} />
          ))
        }
      </section>
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">
          My Projects ({projects.length})
        </h3>
        <Link
          href="/projects"
          label="See all projects"
          isUnderline
          target="_self"
        />
      </header>

      {projects.length === 0 && <p>Soon, stay connected ðŸ‘€...</p>}

      <section class="flex flex-col gap-4 md:flex-row md:flex-wrap">
        {
          projects.length !== 0 &&
            projects
              .slice(0, 4)
              .map((project) => (
                <ProjectCard
                  publishedAt={project.data.publishedAt}
                  title={project.data.title}
                  description={project.data.description}
                  slug={project.slug}
                  techs={project.data.techs}
                  status={project.data.status}
                  prod_link={project.data.prod_link}
                  project_type={project.data.project_type}
                  project_year={project.data.project_year}
                />
              ))
        }
      </section>
    </article>
    <!-- <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">
          Selected projects ({projects.length})
        </h3>
      </header>
      {projects.length === 0 && <p>Oops, I must work^^^^^</p>}

      <section class="flex flex-col gap-4">
        {
          projects.length !== 0 &&
            projects.map((project) => <ProjectCard {...project} />)
        }
      </section>
    </article> -->

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">Work Experiences</h3>
      </header>
      {experiences.length === 0 && <p>Oops, I must work^^^^^</p>}

      <section class="flex flex-col gap-4">
        {
          experiences.length !== 0 &&
            experiences.map((experience) => <ExperienceCard {...experience} />)
        }
      </section>
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">Get in touch</h3>
      </header>
      <p>
        Email me at <Link
          href={`mailto:${presentation.mail}`}
          label={presentation.mail}
        /> or contact/follow me via my social links.
      </p>

      <SocialLinks />
    </article>
  </main>
</Layout>
